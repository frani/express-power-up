{
  "Api doc comment - LIST": {
    "prefix": "ep-apidoc-list",
    "body": [
      "/**",
      " * @api {${1:get}} /${2:items} List ${2:items}",
      " * @apiVersion 1.0.0",
      " * @apiName ${4:list}",
      " * @apiGroup User",
      " * @apiPermission admin",
      " *",
      " * @apiDescription list ${2:items}",
      " *",
      " * @apiParam {Number} page Page number",
      " * @apiParam {Number} limit ${2:items} per page",
      " *",
      " * @apiSuccess {Boolean}  success       True",
      " * @apiSuccess {String}   Message       ${2:items} listed",
      " * @apiSuccess {Object}   body          Pagination object.",
      " *",
      " * @apiSuccessExample {json} Success-Response:",
      " *     HTTP/1.1 200 OK",
      " *     {",
      " *       \"success\": true,",
      " *       \"message\": \"${2:items} listed\"",
      " *       \"body\": {",
      " *           docs: [â€¦]",
      " *           hasNextPage: false",
      " *           hasPrevPage: false",
      " *           limit: 10",
      " *           nextPage: null",
      " *           page: 1",
      " *           pagingCounter: 1",
      " *           prevPage: null",
      " *           totalDocs: 16",
      " *           totalPages: 1",
      " *       }",
      " *     }",
      " *",
      " * @apiError NoAccessRight Only authenticated Users can access the data.",
      " * @apiError UserNotFound   The <code>id</code> of the User was not found.",
      " *",
      " * @apiErrorExample Response (example):",
      " *     HTTP/1.1 401 UNAUTHORIZED",
      " *     {",
      " *       \"success\": false,",
      " *       \"message\": \"jwt must be provided\"",
      " *       \"code\": 401,\",",
      " *     }",
      " */$0"
    ],
    "description": "Create apidoc - LIST example"
  },
  "Api doc comment - POST": {
    "prefix": "ep-apidoc-post",
    "body": [
      "/**",
      " * @api {${1:post}} /${2:item}s Post ${2:item}",
      " * @apiVersion 1.0.0",
      " * @apiName ${3:post}",
      " * @apiGroup User",
      " * @apiPermission admin",
      " *",
      " * @apiDescription create ${2:item}",
      " *",
      " * @apiParam {String} :${2:item} ${2:item} id",
      " *",
      " * @apiSuccess {Boolean}  success       True",
      " * @apiSuccess {String}   Message       ${2:item} created",
      " * @apiSuccess {Object}   body          ${2:item}id object created",
      " *",
      " * @apiSuccessExample {json} Success-Response:",
      " *     HTTP/1.1 201 OK",
      " *     {",
      " *       \"success\": true,",
      " *       \"message\": \"${3:items} created\"",
      " *       \"body\": {",
      " *           ${3:item}id: 11",
      " *       }",
      " *     }",
      " *",
      " * @apiError NoAccessRight Only authenticated Users can access the data.",
      " * @apiError UserNotFound   The <code>id</code> of the User was not found.",
      " *",
      " * @apiErrorExample Response (example):",
      " *     HTTP/1.1 401 UNAUTHORIZED",
      " *     {",
      " *       \"success\": false,",
      " *       \"message\": \"jwt must be provided\"",
      " *       \"code\": 401,\",",
      " *     }",
      " */$0"
    ],
    "description": "Create apidoc - POST example"
  },
  "Api doc comment - GET": {
    "prefix": "ep-apidoc-get",
    "body": [
      "/**",
      " * @api {${1:get}} /${2:items}/:${3:item}id Get ${3:item}",
      " * @apiVersion 1.0.0",
      " * @apiName ${4:get}",
      " * @apiGroup User",
      " * @apiPermission admin",
      " *",
      " * @apiDescription find ${3:item}",
      " *",
      " * @apiParam {String} :${2:item} ${2:item} id",
      " *",
      " * @apiSuccess {Boolean}  success       True",
      " * @apiSuccess {String}   Message       ${3:item} found",
      " * @apiSuccess {Object}   body          ${3:item}id object",
      " *",
      " * @apiSuccessExample {json} Success-Response:",
      " *     HTTP/1.1 200 OK",
      " *     {",
      " *       \"success\": true,",
      " *       \"message\": \"${3:items} listed\"",
      " *       \"body\": {",
      " *           ${3:item}id: 10",
      " *       }",
      " *     }",
      " *",
      " * @apiError NoAccessRight Only authenticated Users can access the data.",
      " * @apiError UserNotFound   The <code>id</code> of the User was not found.",
      " *",
      " * @apiErrorExample Response (example):",
      " *     HTTP/1.1 401 UNAUTHORIZED",
      " *     {",
      " *       \"success\": false,",
      " *       \"message\": \"jwt must be provided\"",
      " *       \"code\": 401,\",",
      " *     }",
      " */$0"
    ],
    "description": "Create apidoc - GET example"
  },
  "Api doc comment - PUT": {
    "prefix": "ep-apidoc-put",
    "body": [
      "/**",
      " * @api {${1:put}} /${2:items}/:${3:item}id Put ${3:item}",
      " * @apiVersion 1.0.0",
      " * @apiName ${4:put}",
      " * @apiGroup User",
      " * @apiPermission admin",
      " *",
      " * @apiDescription update ${3:item}",
      " *",
      " * @apiParam {String} :${2:item} ${2:item} id",
      " *",
      " * @apiSuccess {Boolean}  success       True",
      " * @apiSuccess {String}   Message       ${3:item} updated",
      " * @apiSuccess {Object}   body          ${3:item}id object",
      " *",
      " * @apiSuccessExample {json} Success-Response:",
      " *     HTTP/1.1 200 OK",
      " *     {",
      " *       \"success\": true,",
      " *       \"message\": \"${3:items} updated\"",
      " *       \"body\": {",
      " *           ${3:item}id: 10",
      " *       }",
      " *     }",
      " *",
      " * @apiError NoAccessRight Only authenticated Users can access the data.",
      " * @apiError UserNotFound   The <code>id</code> of the User was not found.",
      " *",
      " * @apiErrorExample Response (example):",
      " *     HTTP/1.1 401 UNAUTHORIZED",
      " *     {",
      " *       \"success\": false,",
      " *       \"message\": \"jwt must be provided\"",
      " *       \"code\": 401,\",",
      " *     }",
      " */$0"
    ],

    "description": "Create apidoc - PUT example"
  },
  "Api doc comment - DELETE": {
    "prefix": "ep-apidoc-delete",
    "body": [
      "/**",
      " * @api {${1:delete}} /${2:items}/:${3:item}id Delete ${3:item}",
      " * @apiVersion 1.0.0",
      " * @apiName ${4:delete}",
      " * @apiGroup User",
      " * @apiPermission admin",
      " *",
      " * @apiDescription delete ${3:item}",
      " *",
      " * @apiParam {String} :${2:item} ${2:item} id",
      " *",
      " * @apiSuccess {Boolean}  success       True",
      " * @apiSuccess {String}   Message       ${3:item} deleted",
      " * @apiSuccess {Object}   body          ${3:item}id object",
      " *",
      " * @apiSuccessExample {json} Success-Response:",
      " *     HTTP/1.1 200 OK",
      " *     {",
      " *       \"success\": true,",
      " *       \"message\": \"${3:items} deleted\"",
      " *     }",
      " *",
      " * @apiError NoAccessRight Only authenticated Users can access the data.",
      " * @apiError UserNotFound   The <code>id</code> of the User was not found.",
      " *",
      " * @apiErrorExample Response (example):",
      " *     HTTP/1.1 401 UNAUTHORIZED",
      " *     {",
      " *       \"success\": false,",
      " *       \"message\": \"jwt must be provided\"",
      " *       \"code\": 401,\",",
      " *     }",
      " */$0"
    ],
    "description": "Create apidoc - DELETE example"
  },
  "Api doc define": {
    "prefix": "ep-apidoc-define",
    "body": [
      "/**",
      " * @apiDefine ${1:UserNotAuthenticated}Error",
      " *",
      " * @apiError ${1:UserNotAuthenticated} User must be Authenticated.",
      " *",
      " * @apiErrorExample Error-Response:",
      " *     HTTP/1.1 401 UNAUTHORIZED",
      " *     {",
      " *       \"error\": \"${1:UserNotAuthenticated}\"",
      " *     }",
      " */\n$0"
    ],
    "description": "Create apidoc define"
  },
  "Api doc define 400": {
    "prefix": "ep-apidoc-define-400",
    "body": [
      "/**",
      " * @apiDefine ${1:BadRequest}Error",
      " *",
      " * @apiError ${1:BadRequest}",
      " *",
      " * @apiErrorExample Error-Response:",
      " *     HTTP/1.1 400 BAD REQUEST",
      " *     {",
      " *       \"success\": false",
      " *       \"message\": \"bad request\"",
      " *       \"stack\": \"${1:BadRequest}\"",
      " *       \"code\": 400",
      " *     }",
      " */\n$0"
    ],
    "description": "Create apidoc define BAD REQUEST"
  },
  "Api doc define 401": {
    "prefix": "ep-apidoc-define-401",
    "body": [
      "/**",
      " * @apiDefine ${1:Unauthenticated}Error",
      " *",
      " * @apiError ${1:Unauthenticated}",
      " *",
      " * @apiErrorExample Error-Response:",
      " *     HTTP/1.1 401 UNAUTHORIZED",
      " *     {",
      " *       \"success\": false",
      " *       \"message\": \"Unauthorized\"",
      " *       \"stack\": \"${1:Unauthenticated}\"",
      " *       \"code\": 401",
      " *     }",
      " */\n$0"
    ],
    "description": "Create apidoc define Unauthenticated"
  },
  "Api doc define 403": {
    "prefix": "ep-apidoc-define-403",
    "body": [
      "/**",
      " * @apiDefine ${1:Forbbiden}Error",
      " *",
      " * @apiError ${1:Forbbiden}",
      " *",
      " * @apiErrorExample Error-Response:",
      " *     HTTP/1.1 403 FORBBIDEN",
      " *     {",
      " *       \"success\": false",
      " *       \"message\": \"Forbbiden\"",
      " *       \"stack\": \"${1:Forbbiden}\"",
      " *       \"code\": 403",
      " *     }",
      " */\n$0"
    ],
    "description": "Create apidoc define Forbbiden"
  },
  "Api doc define 404": {
    "prefix": "ep-apidoc-define-404",
    "body": [
      "/**",
      " * @apiDefine ${1:NotFound}Error",
      " *",
      " * @apiError ${1:NotFound}",
      " *",
      " * @apiErrorExample Error-Response:",
      " *     HTTP/1.1 404 NOT FOUND",
      " *     {",
      " *       \"success\": false",
      " *       \"message\": \"Not Found\"",
      " *       \"stack\": \"${1:Not Found}\"",
      " *       \"code\": 404",
      " *     }",
      " */\n$0"
    ],
    "description": "Create apidoc define Not Found"
  }
}
